--- SDL2-2.0.12/src/core/android/SDL_android.c	2020-03-11 09:36:18.000000000 +0800
+++ termux-sdl/app/src/main/jni/SDL2/src/core/android/SDL_android.c	2020-07-29 22:27:19.975245674 +0800
@@ -31,9 +31,11 @@
 
 #include "SDL_system.h"
 #include "SDL_android.h"
-
 #include "keyinfotable.h"
 
+// 打印日志到Java程序
+#include "SDL_android_log.h"
+
 #include "../../events/SDL_events_c.h"
 #include "../../video/android/SDL_androidkeyboard.h"
 #include "../../video/android/SDL_androidmouse.h"
@@ -319,6 +321,19 @@
 static jmethodID midShowTextInput;
 static jmethodID midSupportsRelativeMouse;
 
+// 设置亮度
+static jmethodID midSetBrightness;
+// 获取亮度
+static jmethodID midGetBrightness;
+
+// 设置音量
+static jmethodID midSetVolume;
+// 获取音量
+static jmethodID midGetVolume;
+
+// 打印日志
+static jmethodID midLogPrint;
+
 /* audio manager */
 static jclass mAudioManagerClass;
 
@@ -591,7 +606,21 @@
     midShouldMinimizeOnFocusLoss = (*env)->GetStaticMethodID(env, mActivityClass, "shouldMinimizeOnFocusLoss","()Z");
     midShowTextInput =  (*env)->GetStaticMethodID(env, mActivityClass, "showTextInput", "(IIII)Z");
     midSupportsRelativeMouse = (*env)->GetStaticMethodID(env, mActivityClass, "supportsRelativeMouse", "()Z");
-
+    
+    // 设置亮度
+    midSetBrightness = (*env)->GetStaticMethodID(env, mActivityClass, "setBrightness", "(I)V");
+    // 获取亮度
+    midGetBrightness = (*env)->GetStaticMethodID(env, mActivityClass, "getBrightness", "()I");
+    
+    // 设置音量
+    midSetVolume = (*env)->GetStaticMethodID(env, mActivityClass, "setVolume", "(I)V");
+    // 获取音量
+    midGetVolume = (*env)->GetStaticMethodID(env, mActivityClass, "getVolume", "()I");
+    
+    // 打印日志
+    midLogPrint = (*env)->GetStaticMethodID(env, mActivityClass, "nativeLogPrint", "(Ljava/lang/String;I)V");
+    
+    
     if (!midClipboardGetText ||
         !midClipboardHasText ||
         !midClipboardSetText ||
@@ -620,6 +649,11 @@
         !midSetWindowStyle ||
         !midShouldMinimizeOnFocusLoss ||
         !midShowTextInput ||
+        !midSetBrightness || // 设置亮度
+        !midGetBrightness || // 获取亮度
+        !midSetVolume ||     // 设置音量
+        !midGetVolume ||     // 获取音量
+        !midLogPrint ||      // 打印日志
         !midSupportsRelativeMouse) {
         __android_log_print(ANDROID_LOG_WARN, "SDL", "Missing some Java callbacks, do you have the latest version of SDLActivity.java?");
     }
@@ -714,8 +748,10 @@
             library_name += 1;
             library_handle = dlopen(library_name, RTLD_GLOBAL);
         }
+        __android_log_print(ANDROID_LOG_ERROR, "SDL", "dlopen %s", dlerror());
     }
-
+    
+	
     if (library_handle) {
         const char *function_name;
         SDL_main_func SDL_main;
@@ -1303,12 +1339,61 @@
 *******************************************************************************/
 
 static SDL_atomic_t s_active;
-struct LocalReferenceHolder
-{
+struct LocalReferenceHolder {
     JNIEnv *m_env;
     const char *m_func;
 };
 
+
+// 设置亮度
+void SDL_AndroidSetBrightness(int brightness) {
+    JNIEnv *env = Android_JNI_GetEnv();
+    (*env)->CallStaticVoidMethod(env, mActivityClass, midSetBrightness, brightness);
+}
+
+// 获取亮度
+int SDL_AndroidGetBrightness(void) {
+    JNIEnv *env = Android_JNI_GetEnv();
+    return (*env)->CallStaticIntMethod(env, mActivityClass, midGetBrightness);
+}
+
+
+// 设置音量
+void SDL_AndroidSetVolume(int volume) {
+    JNIEnv *env = Android_JNI_GetEnv();
+    (*env)->CallStaticVoidMethod(env, mActivityClass, midSetVolume, volume);
+}
+
+// 获取音量
+int SDL_AndroidGetVolume(void) {
+    JNIEnv *env = Android_JNI_GetEnv();
+    return (*env)->CallStaticIntMethod(env, mActivityClass, midGetVolume);
+}
+
+
+// 打印日志到Java程序
+void SDL_AndroidLogPrint(int log_level, const char *tag, const char *fmt, ...) {
+    // 日志信息
+    char info[1024];
+    
+    // 可变参数列表
+    va_list ap;
+    va_start(ap, fmt);
+    vsnprintf(info, sizeof(info), fmt, ap);
+    va_end(ap);
+    
+    // 打印日志
+    if(log_level == LOG_INFO)
+        __android_log_print(ANDROID_LOG_INFO, tag, "%s\n", info);
+    else 
+        __android_log_print(ANDROID_LOG_ERROR, tag, "%s\n", info);
+    
+    // 返回日志到Java程序
+    JNIEnv *env = Android_JNI_GetEnv();
+    jstring jinfo = (*env)->NewStringUTF(env, info);
+    (*env)->CallStaticVoidMethod(env, mActivityClass, midLogPrint, jinfo, log_level);
+}
+
 static struct LocalReferenceHolder LocalReferenceHolder_Setup(const char *func)
 {
     struct LocalReferenceHolder refholder;
