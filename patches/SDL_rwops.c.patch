--- SDL2-2.0.12/src/file/SDL_rwops.c	2020-03-11 09:36:18.000000000 +0800
+++ termux-sdl/app/src/main/jni/SDL2/src/file/SDL_rwops.c	2020-07-29 22:27:19.995245676 +0800
@@ -54,6 +54,8 @@
 #endif /* __APPLE__ */
 
 #ifdef __ANDROID__
+#include <unistd.h>
+#include <android/log.h>
 #include "../core/android/SDL_android.h"
 #include "SDL_system.h"
 #endif
@@ -528,6 +530,7 @@
 SDL_RWops *
 SDL_RWFromFile(const char *file, const char *mode)
 {
+    
     SDL_RWops *rwops = NULL;
     if (!file || !*file || !mode || !*mode) {
         SDL_SetError("SDL_RWFromFile(): No file or no mode specified");
@@ -537,20 +540,37 @@
 #ifdef HAVE_STDIO_H
     /* Try to open the file on the filesystem first */
     if (*file == '/') {
+        // 打开文件，绝对路径
+        __android_log_print(ANDROID_LOG_INFO, "SDL", "SDL2 open file open from external path: %s\n", file);
         FILE *fp = fopen(file, mode);
-        if (fp) {
+        if (fp != NULL) {
             return SDL_RWFromFP(fp, 1);
         }
     } else {
+        // 打开文件，相对路径
         /* Try opening it from internal storage if it's a relative path */
-        char *path;
-        FILE *fp;
+        char *path = NULL;
+        // pwd from TermuxSDLActivity JNI.setEnv();
+        char *pwd = NULL;
+        FILE *fp = NULL;
+        
 
         /* !!! FIXME: why not just "char path[PATH_MAX];" ? */
         path = SDL_stack_alloc(char, PATH_MAX);
-        if (path) {
-            SDL_snprintf(path, PATH_MAX, "%s/%s",
-                         SDL_AndroidGetInternalStoragePath(), file);
+        if (path != NULL) {
+            pwd = getenv("PWD");
+            // 如果以相对路径的方式去打开文件，Android SDL2默认会加载内部路径下的文件
+            // 也就是 /data/data/package_name/files/your_file
+            // 在这里添加pwd的作用，是让SDL2默认加载 你自己的项目 目录下的文件
+            if(pwd != NULL) {
+                // pwd的值等于JNI.java setEnv("PWD", pwd, true)
+                SDL_snprintf(path, PATH_MAX, "%s/%s", pwd, file);
+            } else {
+                // SDL_AndroidGetInternalStoragePath = /data/data/package_name/files
+                SDL_snprintf(path, PATH_MAX, "%s/%s", SDL_AndroidGetInternalStoragePath(), file);
+            }
+            __android_log_print(ANDROID_LOG_INFO, "SDL", "SDL2 Open file from internal path: %s\n", path);
+            
             fp = fopen(path, mode);
             SDL_stack_free(path);
             if (fp) {
@@ -562,8 +582,11 @@
 
     /* Try to open the file from the asset system */
     rwops = SDL_AllocRW();
-    if (!rwops)
-        return NULL;            /* SDL_SetError already setup by SDL_AllocRW() */
+    
+    if (!rwops) return NULL; /* SDL_SetError already setup by SDL_AllocRW() */
+    
+    __android_log_print(ANDROID_LOG_INFO, "SDL", "SDL2 Open file from android assets: %s\n", file);
+    // Android SDL2 加载assets下的文件
     if (Android_JNI_FileOpen(rwops, file, mode) < 0) {
         SDL_FreeRW(rwops);
         return NULL;
@@ -600,6 +623,9 @@
         #else
         FILE *fp = fopen(file, mode);
         #endif
+        
+        __android_log_print(ANDROID_LOG_INFO, "SDL", "SDL Open file: %s\n", file);
+        
         if (fp == NULL) {
             SDL_SetError("Couldn't open %s", file);
         } else {
